---
import "../styles/global.css";
import ThemeIcon from "@/components/ThemeIcon.astro";

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en"  class="bg-[var(--page-bg)]">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>

	<script is:inline>
      const setTheme = () => {
        const theme = (() => {
          if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
            return localStorage.getItem("theme");
          }
          if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
            return "dark";
          }
          return "light";
        })();

        if (theme === "light") {
          document.documentElement.setAttribute("data-theme", "light");
        } else {
          document.documentElement.setAttribute("data-theme", "dark");
        }

        window.localStorage.setItem("theme", theme || "light");
      };
      setTheme();

      document.addEventListener("astro:after-swap", setTheme);
    </script>
  </head>
  <body>
    <div
      id="page"
      class="flex min-h-screen overflow-hidden rounded-md text-[var(--text)] md:mx-10 md:mt-14"
    >
      <div class="hidden min-w-64 bg-[var(--side-bg)] md:block">
        <ThemeIcon />
      </div>
      <div class="w-full flex-1 bg-[var(--content-bg)] pb-20">
        <slot />
      </div>
      <div class="hidden min-w-64 bg-[var(--side-bg)] xl:block">Right</div>
    </div>
  </body>
</html>
